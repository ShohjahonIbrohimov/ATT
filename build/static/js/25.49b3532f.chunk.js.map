{"version":3,"sources":["../node_modules/@mui/material/Toolbar/toolbarClasses.js","../node_modules/@mui/material/Toolbar/Toolbar.js","app/views/material-kit/tables/SimpleTable.jsx","../node_modules/@mui/material/TablePagination/TablePaginationActions.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js","../node_modules/@mui/material/internal/svg-icons/LastPage.js","../node_modules/@mui/material/internal/svg-icons/FirstPage.js","../node_modules/@mui/material/TablePagination/tablePaginationClasses.js","../node_modules/@mui/material/TablePagination/TablePagination.js","app/views/material-kit/tables/PaginationTable.jsx","app/views/material-kit/tables/AppTable.jsx"],"names":["getToolbarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","toolbarClasses","_excluded","ToolbarRoot","styled","name","overridesResolver","props","styles","ownerState","root","disableGutters","gutters","variant","theme","_extends","position","display","alignItems","paddingLeft","spacing","paddingRight","breakpoints","up","minHeight","mixins","toolbar","Toolbar","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","StyledTable","Table","whiteSpace","textTransform","subscribarList","date","amount","status","company","SimpleTable","_LastPageIcon","_FirstPageIcon","_KeyboardArrowRight","_KeyboardArrowLeft","_KeyboardArrowLeft2","_KeyboardArrowRight2","_FirstPageIcon2","_LastPageIcon2","Box","width","overflow","TableHead","TableRow","TableCell","TableBody","map","subscriber","index","align","IconButton","Icon","color","createSvgIcon","d","TablePaginationActions","backIconButtonProps","count","getItemAriaLabel","nextIconButtonProps","onPageChange","page","rowsPerPage","showFirstButton","showLastButton","useTheme","_jsxs","children","onClick","event","disabled","title","direction","LastPageIcon","FirstPageIcon","KeyboardArrowRight","KeyboardArrowLeft","Math","ceil","max","getTablePaginationUtilityClass","tablePaginationClasses","_InputBase","TablePaginationRoot","palette","text","primary","fontSize","typography","pxToRem","padding","TablePaginationToolbar","actions","flexShrink","marginLeft","TablePaginationSpacer","spacer","flex","TablePaginationSelectLabel","selectLabel","body2","TablePaginationSelect","Select","selectIcon","select","input","selectRoot","marginRight","textAlign","textAlignLast","TablePaginationMenuItem","MenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","from","to","defaultGetAriaLabel","type","TablePagination","ActionsComponent","colSpan","colSpanProp","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","SelectProps","MenuItemComponent","native","selectId","useId","id","labelId","length","InputBase","value","onChange","icon","rowsPerPageOption","_createElement","isHostComponent","key","label","min","PaginationTable","setRowsPerPage","useState","setPage","slice","sx","px","onChangePage","newPage","onChangeRowsPerPage","target","Container","margin","down","marginBottom","AppTable","routeSegments","path","py"],"mappings":"iMACO,SAASA,EAAuBC,GACrC,OAAOC,YAAqB,aAAcD,GAErBE,YAAuB,aAAc,CAAC,OAAQ,UAAW,UAAW,UAC5EC,I,OCHf,MAAMC,EAAY,CAAC,YAAa,YAAa,iBAAkB,WAsBzDC,EAAcC,YAAO,MAAO,CAChCC,KAAM,aACNP,KAAM,OACNQ,kBAAmB,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,MAAOD,EAAWE,gBAAkBH,EAAOI,QAASJ,EAAOC,EAAWI,YAPrET,EASjB,QAAC,MACFU,EADE,WAEFL,GAFC,SAGGM,YAAS,CACbC,SAAU,WACVC,QAAS,OACTC,WAAY,WACVT,EAAWE,gBAAkB,CAC/BQ,YAAaL,EAAMM,QAAQ,GAC3BC,aAAcP,EAAMM,QAAQ,GAC5B,CAACN,EAAMQ,YAAYC,GAAG,OAAQ,CAC5BJ,YAAaL,EAAMM,QAAQ,GAC3BC,aAAcP,EAAMM,QAAQ,KAEN,UAAvBX,EAAWI,SAAuB,CACnCW,UAAW,QACT,QAAC,MACHV,EADG,WAEHL,GAFE,QAGyB,YAAvBA,EAAWI,SAAyBC,EAAMW,OAAOC,WACjDC,EAAuBC,cAAiB,SAAiBC,EAASC,GACtE,MAAMvB,EAAQwB,YAAc,CAC1BxB,MAAOsB,EACPxB,KAAM,gBAGF,UACJ2B,EADI,UAEJC,EAAY,MAFR,eAGJtB,GAAiB,EAHb,QAIJE,EAAU,WACRN,EACE2B,EAAQC,YAA8B5B,EAAOL,GAE7CO,EAAaM,YAAS,GAAIR,EAAO,CACrC0B,YACAtB,iBACAE,YAGIuB,EA7DkB3B,KACxB,MAAM,QACJ2B,EADI,eAEJzB,EAFI,QAGJE,GACEJ,EACE4B,EAAQ,CACZ3B,KAAM,CAAC,QAASC,GAAkB,UAAWE,IAE/C,OAAOyB,YAAeD,EAAOxC,EAAwBuC,IAoDrCG,CAAkB9B,GAClC,OAAoB+B,cAAKrC,EAAaY,YAAS,CAC7C0B,GAAIR,EACJD,UAAWU,YAAKN,EAAQ1B,KAAMsB,GAC9BF,IAAKA,EACLrB,WAAYA,GACXyB,OAmDUP,O,4JCtHf,MAAMgB,EAAcvC,YAAOwC,IAAPxC,EAAc,QAAC,MAAEU,GAAH,QAAgB,CAC9C+B,WAAY,MACZ,UAAW,CACP,OAAQ,CACJ,OAAQ,CACJ1B,YAAa,EACbE,aAAc,KAI1B,UAAW,CACP,OAAQ,CACJ,OAAQ,CACJF,YAAa,EACb2B,cAAe,oBAMzBC,EAAiB,CACnB,CACI1C,KAAM,WACN2C,KAAM,mBACNC,OAAQ,IACRC,OAAQ,QACRC,QAAS,oBAEb,CACI9C,KAAM,cACN2C,KAAM,mBACNC,OAAQ,IACRC,OAAQ,OACRC,QAAS,mBAEb,CACI9C,KAAM,iBACN2C,KAAM,kBACNC,OAAQ,IACRC,OAAQ,QACRC,QAAS,qBAEb,CACI9C,KAAM,aACN2C,KAAM,kBACNC,OAAQ,KACRC,OAAQ,OACRC,QAAS,oBAEb,CACI9C,KAAM,aACN2C,KAAM,kBACNC,OAAQ,KACRC,OAAQ,OACRC,QAAS,oBAEb,CACI9C,KAAM,aACN2C,KAAM,kBACNC,OAAQ,KACRC,OAAQ,OACRC,QAAS,qBA6CFC,ICnHXC,EAAeC,EAAgBC,EAAqBC,EAAoBC,EAAqBC,EAAsBC,EAAiBC,EDmHzHR,EAzCK,IAEZ,cAACS,EAAA,EAAD,CAAKC,MAAM,OAAOC,SAAS,OAA3B,SACI,eAACpB,EAAD,WACI,cAACqB,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,yBACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,0BAGR,cAACC,EAAA,EAAD,UACKpB,EAAeqB,KAAI,CAACC,EAAYC,IAC7B,eAACL,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWK,MAAM,OAAjB,SACKF,EAAWhE,OAEhB,cAAC6D,EAAA,EAAD,CAAWK,MAAM,OAAjB,SACKF,EAAWlB,UAEhB,cAACe,EAAA,EAAD,CAAWK,MAAM,OAAjB,SACKF,EAAWrB,OAEhB,cAACkB,EAAA,EAAD,UAAYG,EAAWnB,SACvB,eAACgB,EAAA,EAAD,eAAaG,EAAWpB,UACxB,cAACiB,EAAA,EAAD,UACI,cAACM,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAMC,MAAM,QAAZ,yBAdGJ,Y,2GEtFxBK,cAA4BnC,cAAK,OAAQ,CACtDoC,EAAG,uDACD,qBCFWD,cAA4BnC,cAAK,OAAQ,CACtDoC,EAAG,qDACD,sB,QCFWD,cAA4BnC,cAAK,OAAQ,CACtDoC,EAAG,+DACD,YCFWD,cAA4BnC,cAAK,OAAQ,CACtDoC,EAAG,+DACD,aJJJ,MAAM1E,EAAY,CAAC,sBAAuB,QAAS,mBAAoB,sBAAuB,eAAgB,OAAQ,cAAe,kBAAmB,kBAwIzI2E,MAzH6BjD,cAAiB,SAAgCrB,EAAOuB,GAClG,MAAM,oBACJgD,EADI,MAEJC,EAFI,iBAGJC,EAHI,oBAIJC,EAJI,aAKJC,EALI,KAMJC,EANI,YAOJC,EAPI,gBAQJC,EARI,eASJC,GACE/E,EACE2B,EAAQC,YAA8B5B,EAAOL,GAE7CY,EAAQyE,cAkBd,OAAoBC,eAAM,MAAOzE,YAAS,CACxCe,IAAKA,GACJI,EAAO,CACRuD,SAAU,CAACJ,GAAgC7C,cAAKgC,IAAY,CAC1DkB,QApB+BC,IACjCT,EAAaS,EAAO,IAoBlBC,SAAmB,IAATT,EACV,aAAcH,EAAiB,QAASG,GACxCU,MAAOb,EAAiB,QAASG,GACjCM,SAA8B,QAApB3E,EAAMgF,UAAsBzC,IAAkBA,EAA6Bb,cAAKuD,EAAc,KAAOzC,IAAmBA,EAA8Bd,cAAKwD,EAAe,OACrKxD,cAAKgC,IAAYzD,YAAS,CACzC2E,QAtB0BC,IAC5BT,EAAaS,EAAOR,EAAO,IAsBzBS,SAAmB,IAATT,EACVT,MAAO,UACP,aAAcM,EAAiB,WAAYG,GAC3CU,MAAOb,EAAiB,WAAYG,IACnCL,EAAqB,CACtBW,SAA8B,QAApB3E,EAAMgF,UAAsBvC,IAAwBA,EAAmCf,cAAKyD,EAAoB,KAAOzC,IAAuBA,EAAkChB,cAAK0D,EAAmB,QAClM1D,cAAKgC,IAAYzD,YAAS,CAC1C2E,QA1B0BC,IAC5BT,EAAaS,EAAOR,EAAO,IA0BzBS,UAAqB,IAAXb,GAAeI,GAAQgB,KAAKC,KAAKrB,EAAQK,GAAe,EAClEV,MAAO,UACP,aAAcM,EAAiB,OAAQG,GACvCU,MAAOb,EAAiB,OAAQG,IAC/BF,EAAqB,CACtBQ,SAA8B,QAApB3E,EAAMgF,UAAsBrC,IAAwBA,EAAmCjB,cAAK0D,EAAmB,KAAOxC,IAAyBA,EAAoClB,cAAKyD,EAAoB,QACnNX,GAA+B9C,cAAKgC,IAAY,CACnDkB,QA9B8BC,IAChCT,EAAaS,EAAOQ,KAAKE,IAAI,EAAGF,KAAKC,KAAKrB,EAAQK,GAAe,KA8B/DQ,SAAUT,GAAQgB,KAAKC,KAAKrB,EAAQK,GAAe,EACnD,aAAcJ,EAAiB,OAAQG,GACvCU,MAAOb,EAAiB,OAAQG,GAChCM,SAA8B,QAApB3E,EAAMgF,UAAsBnC,IAAoBA,EAA+BnB,cAAKwD,EAAe,KAAOpC,IAAmBA,EAA8BpB,cAAKuD,EAAc,c,0BKjFvL,SAASO,EAA+BxG,GAC7C,OAAOC,YAAqB,qBAAsBD,GAGrCyG,ICFXC,EDEWD,EADgBvG,YAAuB,qBAAsB,CAAC,OAAQ,UAAW,SAAU,cAAe,aAAc,SAAU,aAAc,QAAS,WAAY,gBAAiB,YCCrM,MAAME,EAAY,CAAC,mBAAoB,sBAAuB,YAAa,UAAW,YAAa,QAAS,mBAAoB,qBAAsB,mBAAoB,sBAAuB,eAAgB,sBAAuB,OAAQ,cAAe,qBAAsB,cAAe,kBAAmB,kBAmBjTuG,EAAsBrG,YAAO8D,IAAW,CAC5C7D,KAAM,qBACNP,KAAM,OACNQ,kBAAmB,CAACC,EAAOC,IAAWA,EAAOE,MAHnBN,EAIzB,QAAC,MACFU,GADC,QAEI,CACLiD,SAAU,OACVW,MAAO5D,EAAM4F,QAAQC,KAAKC,QAC1BC,SAAU/F,EAAMgG,WAAWC,QAAQ,IAEnC,eAAgB,CACdC,QAAS,OAGPC,EAAyB7G,YAAOuB,IAAS,CAC7CtB,KAAM,qBACNP,KAAM,UACNQ,kBAAmB,CAACC,EAAOC,IAAWO,YAAS,CAC7C,cAAOwF,EAAuBW,UAAY1G,EAAO0G,SAChD1G,EAAOkB,UALmBtB,EAM5B,QAAC,MACFU,GADC,QAEI,CACLU,UAAW,GACXH,aAAc,EACd,WAAIP,EAAMQ,YAAYC,GAAG,MAAzB,kCAAgE,CAC9DC,UAAW,IAEb,CAACV,EAAMQ,YAAYC,GAAG,OAAQ,CAC5BC,UAAW,GACXH,aAAc,GAEhB,cAAOkF,EAAuBW,UAAY,CACxCC,WAAY,EACZC,WAAY,QAGVC,GAAwBjH,YAAO,MAAO,CAC1CC,KAAM,qBACNP,KAAM,SACNQ,kBAAmB,CAACC,EAAOC,IAAWA,EAAO8G,QAHjBlH,CAI3B,CACDmH,KAAM,aAEFC,GAA6BpH,YAAO,IAAK,CAC7CC,KAAM,qBACNP,KAAM,cACNQ,kBAAmB,CAACC,EAAOC,IAAWA,EAAOiH,aAHZrH,EAIhC,QAAC,MACFU,GADC,SAEGC,YAAS,GAAID,EAAMgG,WAAWY,MAAO,CACzCP,WAAY,OAERQ,GAAwBvH,YAAOwH,IAAQ,CAC3CvH,KAAM,qBACNP,KAAM,SACNQ,kBAAmB,CAACC,EAAOC,IAAWO,YAAS,CAC7C,cAAOwF,EAAuBsB,aAAerH,EAAOqH,WACpD,cAAOtB,EAAuBuB,SAAWtH,EAAOsH,QAC/CtH,EAAOuH,MAAOvH,EAAOwH,aANI5H,CAO3B,CACDsE,MAAO,UACPmC,SAAU,UACVM,WAAY,EACZc,YAAa,GACbb,WAAY,EACZ,cAAOb,EAAuBuB,SAAW,CACvC3G,YAAa,EACbE,aAAc,GACd6G,UAAW,QACXC,cAAe,WAIbC,GAA0BhI,YAAOiI,IAAU,CAC/ChI,KAAM,qBACNP,KAAM,WACNQ,kBAAmB,CAACC,EAAOC,IAAWA,EAAO8H,UAHflI,CAI7B,IACGmI,GAA+BnI,YAAO,IAAK,CAC/CC,KAAM,qBACNP,KAAM,gBACNQ,kBAAmB,CAACC,EAAOC,IAAWA,EAAOgI,eAHVpI,EAIlC,QAAC,MACFU,GADC,SAEGC,YAAS,GAAID,EAAMgG,WAAWY,MAAO,CACzCP,WAAY,OAGd,SAASsB,GAAT,GAIG,IAJgC,KACjCC,EADiC,GAEjCC,EAFiC,MAGjC5D,GACC,EACD,gBAAU2D,EAAV,YAAkBC,EAAlB,gBAAsC,IAAX5D,EAAeA,EAAf,oBAAoC4D,IAGjE,SAASC,GAAoBC,GAC3B,sBAAgBA,EAAhB,SA0SaC,OAhRsBlH,cAAiB,SAAyBC,EAASC,GACtF,MAAMvB,EAAQwB,YAAc,CAC1BxB,MAAOsB,EACPxB,KAAM,wBAGF,iBACJ0I,EAAmBlE,EADf,oBAEJC,EAFI,UAGJ9C,EACAgH,QAASC,EAJL,UAKJhH,EAAYiC,IALR,MAMJa,EANI,iBAOJC,EAAmB4D,GAPf,mBAQJM,EAAqBT,GARjB,iBASJU,EAAmB,iBATf,oBAUJlE,EAVI,aAWJC,EAXI,oBAYJkE,EAZI,KAaJjE,EAbI,YAcJC,EAdI,mBAeJiE,EAAqB,CAAC,GAAI,GAAI,GAAI,KAf9B,YAgBJC,EAAc,GAhBV,gBAiBJjE,GAAkB,EAjBd,eAkBJC,GAAiB,GACf/E,EACE2B,EAAQC,YAA8B5B,EAAOL,GAE7CO,EAAaF,EACb6B,EApDkB3B,KACxB,MAAM,QACJ2B,GACE3B,EAaJ,OAAO6B,YAZO,CACZ5B,KAAM,CAAC,QACPgB,QAAS,CAAC,WACV4F,OAAQ,CAAC,UACTG,YAAa,CAAC,eACdK,OAAQ,CAAC,UACTC,MAAO,CAAC,SACRF,WAAY,CAAC,cACbS,SAAU,CAAC,YACXE,cAAe,CAAC,iBAChBtB,QAAS,CAAC,YAEiBZ,EAAgClE,IAoC7CG,CAAkB9B,GAC5B8I,EAAoBD,EAAYE,OAAS,SAAWpB,GAC1D,IAAIY,EAEA/G,IAAciC,KAA2B,OAAdjC,IAC7B+G,EAAUC,GAAe,KAG3B,MAAMQ,EAAWC,YAAMJ,EAAYK,IAC7BC,EAAUF,YAAMJ,EAAYM,SAUlC,OAAoBpH,cAAKiE,EAAqB1F,YAAS,CACrDiI,QAASA,EACTlH,IAAKA,EACLW,GAAIR,EACJxB,WAAYA,EACZuB,UAAWU,YAAKN,EAAQ1B,KAAMsB,IAC7BE,EAAO,CACRuD,SAAuBD,eAAMyB,EAAwB,CACnDjF,UAAWI,EAAQV,QACnB+D,SAAU,CAAcjD,cAAK6E,GAAuB,CAClDrF,UAAWI,EAAQkF,SACjB+B,EAAmBQ,OAAS,GAAkBrH,cAAKgF,GAA4B,CACjFxF,UAAWI,EAAQqF,YACnBkC,GAAIC,EACJnE,SAAU0D,IACRE,EAAmBQ,OAAS,GAAkBrH,cAAKmF,GAAuB5G,YAAS,CACrFF,QAAS,WACTkH,MAAOvB,IAAeA,EAA0BhE,cAAKsH,IAAW,KAChEC,MAAO3E,EACP4E,SAAUZ,EACVO,GAAIF,EACJG,QAASA,GACRN,EAAa,CACdlH,QAASrB,YAAS,GAAIuI,EAAYlH,QAAS,CAEzC1B,KAAMgC,YAAKN,EAAQ2F,MAAO3F,EAAQ4F,YAAasB,EAAYlH,SAAW,IAAI1B,MAC1EoH,OAAQpF,YAAKN,EAAQ0F,QAASwB,EAAYlH,SAAW,IAAI0F,QAEzDmC,KAAMvH,YAAKN,EAAQyF,YAAayB,EAAYlH,SAAW,IAAI6H,QAE7DxE,SAAU4D,EAAmBjF,KAAI8F,GAAkCC,wBAAeZ,EAAmBxI,YAAS,IAAKqJ,YAAgBb,IAAsB,CACvJ9I,cACC,CACDuB,UAAWI,EAAQkG,SACnB+B,IAAKH,EAAkBI,MAAQJ,EAAkBI,MAAQJ,EACzDH,MAAOG,EAAkBH,MAAQG,EAAkBH,MAAQG,IACzDA,EAAkBI,MAAQJ,EAAkBI,MAAQJ,QACxC1H,cAAK+F,GAA8B,CACnDvG,UAAWI,EAAQoG,cACnB/C,SAAUyD,EAAmB,CAC3BR,KAAgB,IAAV3D,EAAc,EAAII,EAAOC,EAAc,EAC7CuD,IAhDS,IAAX5D,GACMI,EAAO,GAAKC,GAGE,IAAjBA,EAAqBL,EAAQoB,KAAKoE,IAAIxF,GAAQI,EAAO,GAAKC,GA6C3DL,OAAkB,IAAXA,GAAgB,EAAIA,EAC3BI,WAEa3C,cAAKuG,EAAkB,CACtC/G,UAAWI,EAAQ8E,QACnBpC,oBAAqBA,EACrBC,MAAOA,EACPE,oBAAqBA,EACrBC,aAAcA,EACdC,KAAMA,EACNC,YAAaA,EACbC,gBAAiBA,EACjBC,eAAgBA,EAChBN,iBAAkBA,aC/O1B,MAAMrC,GAAcvC,YAAOwC,IAAPxC,EAAc,QAAC,MAAEU,GAAH,QAAgB,CAC9C+B,WAAY,MACZ,UAAW,CACP,OAAQ,CACJ,OAAQ,CACJ1B,YAAa,EACbE,aAAc,KAI1B,UAAW,CACP,OAAQ,CACJ,OAAQ,CACJF,YAAa,EACb2B,cAAe,oBAMzBC,GAAiB,CACnB,CACI1C,KAAM,WACN2C,KAAM,mBACNC,OAAQ,IACRC,OAAQ,QACRC,QAAS,oBAEb,CACI9C,KAAM,cACN2C,KAAM,mBACNC,OAAQ,IACRC,OAAQ,OACRC,QAAS,mBAEb,CACI9C,KAAM,cACN2C,KAAM,mBACNC,OAAQ,IACRC,OAAQ,OACRC,QAAS,mBAEb,CACI9C,KAAM,iBACN2C,KAAM,kBACNC,OAAQ,IACRC,OAAQ,QACRC,QAAS,qBAEb,CACI9C,KAAM,aACN2C,KAAM,kBACNC,OAAQ,KACRC,OAAQ,OACRC,QAAS,oBAEb,CACI9C,KAAM,aACN2C,KAAM,kBACNC,OAAQ,KACRC,OAAQ,OACRC,QAAS,oBAEb,CACI9C,KAAM,aACN2C,KAAM,kBACNC,OAAQ,KACRC,OAAQ,OACRC,QAAS,oBAEb,CACI9C,KAAM,aACN2C,KAAM,kBACNC,OAAQ,KACRC,OAAQ,OACRC,QAAS,oBAEb,CACI9C,KAAM,aACN2C,KAAM,kBACNC,OAAQ,KACRC,OAAQ,OACRC,QAAS,qBA+EFqH,OA3ES,KACpB,MAAOpF,EAAaqF,GAAkB7I,IAAM8I,SAAS,IAC9CvF,EAAMwF,GAAW/I,IAAM8I,SAAS,GAWvC,OACI,eAAC7G,EAAA,EAAD,CAAKC,MAAM,OAAOC,SAAS,OAA3B,UACI,eAAC,GAAD,WACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,yBACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,0BAGR,cAACC,EAAA,EAAD,UACKpB,GACI6H,MACGzF,EAAOC,EACPD,EAAOC,EAAcA,GAExBhB,KAAI,CAACC,EAAYC,IACd,eAACL,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWK,MAAM,OAAjB,SACKF,EAAWhE,OAEhB,cAAC6D,EAAA,EAAD,CAAWK,MAAM,OAAjB,SACKF,EAAWlB,UAEhB,cAACe,EAAA,EAAD,CAAWK,MAAM,OAAjB,SACKF,EAAWrB,OAEhB,cAACkB,EAAA,EAAD,UAAYG,EAAWnB,SACvB,eAACgB,EAAA,EAAD,eAAaG,EAAWpB,UACxB,cAACiB,EAAA,EAAD,UACI,cAACM,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAMC,MAAM,QAAZ,yBAdGJ,UAsB/B,cAAC,GAAD,CACIuG,GAAI,CAAEC,GAAI,GACVzB,mBAAoB,CAAC,EAAG,GAAI,IAC5BpH,UAAU,MACV8C,MAAOhC,GAAe8G,OACtBzE,YAAaA,EACbD,KAAMA,EACNL,oBAAqB,CACjB,aAAc,iBAElBG,oBAAqB,CACjB,aAAc,aAElB8F,aAhEa,CAACpF,EAAOqF,KAC7BL,EAAQK,IAgEAC,oBA7DqBtF,IAC7B8E,GAAgB9E,EAAMuF,OAAOnB,OAC7BY,EAAQ,U,UCvGhB,MAAMQ,GAAY/K,YAAO,MAAPA,EAAc,QAAC,MAAEU,GAAH,QAAgB,CAC5CsK,OAAQ,OACR,CAACtK,EAAMQ,YAAY+J,KAAK,OAAQ,CAC5BD,OAAQ,QAEZ,gBAAiB,CACbE,aAAc,OACd,CAACxK,EAAMQ,YAAY+J,KAAK,OAAQ,CAC5BC,aAAc,aA2BXC,UAtBE,IAET,eAACJ,GAAD,WACI,qBAAKnJ,UAAU,aAAf,SACI,cAAC,KAAD,CACIwJ,cAAe,CACX,CAAEnL,KAAM,WAAYoL,KAAM,aAC1B,CAAEpL,KAAM,cAIpB,cAAC,KAAD,CAAYwF,MAAM,eAAlB,SACI,cAAC,EAAD,MAEJ,cAAChC,EAAA,EAAD,CAAK6H,GAAG,SACR,cAAC,KAAD,CAAY7F,MAAM,mBAAlB,SACI,cAAC,GAAD","file":"static/js/25.49b3532f.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getToolbarUtilityClass } from './toolbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\n\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}, ownerState.variant === 'dense' && {\n  minHeight: 48\n}), ({\n  theme,\n  ownerState\n}) => ownerState.variant === 'regular' && theme.mixins.toolbar);\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    variant = 'regular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properites to be used to lay out the children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","import React from 'react'\nimport {\n    Table,\n    TableHead,\n    TableCell,\n    TableBody,\n    IconButton,\n    Icon,\n    TableRow,\n} from '@mui/material'\nimport { Box, styled } from '@mui/system'\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n    whiteSpace: 'pre',\n    '& thead': {\n        '& tr': {\n            '& th': {\n                paddingLeft: 0,\n                paddingRight: 0,\n            },\n        },\n    },\n    '& tbody': {\n        '& tr': {\n            '& td': {\n                paddingLeft: 0,\n                textTransform: 'capitalize',\n            },\n        },\n    },\n}))\n\nconst subscribarList = [\n    {\n        name: 'john doe',\n        date: '18 january, 2019',\n        amount: 1000,\n        status: 'close',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'kessy bryan',\n        date: '10 january, 2019',\n        amount: 9000,\n        status: 'open',\n        company: 'My Fintech LTD.',\n    },\n    {\n        name: 'james cassegne',\n        date: '8 january, 2019',\n        amount: 5000,\n        status: 'close',\n        company: 'Collboy Tech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n]\n\nconst SimpleTable = () => {\n    return (\n        <Box width=\"100%\" overflow=\"auto\">\n            <StyledTable>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Company</TableCell>\n                        <TableCell>Start Date</TableCell>\n                        <TableCell>Status</TableCell>\n                        <TableCell>Amount</TableCell>\n                        <TableCell>Action</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {subscribarList.map((subscriber, index) => (\n                        <TableRow key={index}>\n                            <TableCell align=\"left\">\n                                {subscriber.name}\n                            </TableCell>\n                            <TableCell align=\"left\">\n                                {subscriber.company}\n                            </TableCell>\n                            <TableCell align=\"left\">\n                                {subscriber.date}\n                            </TableCell>\n                            <TableCell>{subscriber.status}</TableCell>\n                            <TableCell>${subscriber.amount}</TableCell>\n                            <TableCell>\n                                <IconButton>\n                                    <Icon color=\"error\">close</Icon>\n                                </IconButton>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </StyledTable>\n        </Box>\n    )\n}\n\nexport default SimpleTable\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _LastPageIcon, _FirstPageIcon, _KeyboardArrowRight, _KeyboardArrowLeft, _KeyboardArrowLeft2, _KeyboardArrowRight2, _FirstPageIcon2, _LastPageIcon2;\n\nconst _excluded = [\"backIconButtonProps\", \"count\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\nimport LastPageIcon from '../internal/svg-icons/LastPage';\nimport FirstPageIcon from '../internal/svg-icons/FirstPage';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  const {\n    backIconButtonProps,\n    count,\n    getItemAriaLabel,\n    nextIconButtonProps,\n    onPageChange,\n    page,\n    rowsPerPage,\n    showFirstButton,\n    showLastButton\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const theme = useTheme();\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page),\n      children: theme.direction === 'rtl' ? _LastPageIcon || (_LastPageIcon = /*#__PURE__*/_jsx(LastPageIcon, {})) : _FirstPageIcon || (_FirstPageIcon = /*#__PURE__*/_jsx(FirstPageIcon, {}))\n    }), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, backIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowRight || (_KeyboardArrowRight = /*#__PURE__*/_jsx(KeyboardArrowRight, {})) : _KeyboardArrowLeft || (_KeyboardArrowLeft = /*#__PURE__*/_jsx(KeyboardArrowLeft, {}))\n    })), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleNextButtonClick,\n      disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowLeft2 || (_KeyboardArrowLeft2 = /*#__PURE__*/_jsx(KeyboardArrowLeft, {})) : _KeyboardArrowRight2 || (_KeyboardArrowRight2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {}))\n    })), showLastButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page),\n      children: theme.direction === 'rtl' ? _FirstPageIcon2 || (_FirstPageIcon2 = /*#__PURE__*/_jsx(FirstPageIcon, {})) : _LastPageIcon2 || (_LastPageIcon2 = /*#__PURE__*/_jsx(LastPageIcon, {}))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired\n} : void 0;\nexport default TablePaginationActions;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _InputBase;\n\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: theme.palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n}));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n}));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n\n  }\n});\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\n\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\n\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\n\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n\n  const {\n    ActionsComponent = TablePaginationActions,\n    backIconButtonProps,\n    className,\n    colSpan: colSpanProp,\n    component = TableCell,\n    count,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelRowsPerPage = 'Rows per page:',\n    nextIconButtonProps,\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    SelectProps = {},\n    showFirstButton = false,\n    showLastButton = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const MenuItemComponent = SelectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const selectId = useId(SelectProps.id);\n  const labelId = useId(SelectProps.labelId);\n\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\",\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {})),\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, SelectProps, {\n        classes: _extends({}, SelectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (SelectProps.classes || {}).root),\n          select: clsx(classes.select, (SelectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (SelectProps.classes || {}).icon)\n        }),\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        getItemAriaLabel: getItemAriaLabel\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n\n    if (count === -1) {\n      return null;\n    }\n\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;","import {\n    IconButton,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    Icon,\n    TablePagination,\n} from '@mui/material'\nimport React from 'react'\nimport { Box, styled } from '@mui/system'\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n    whiteSpace: 'pre',\n    '& thead': {\n        '& tr': {\n            '& th': {\n                paddingLeft: 0,\n                paddingRight: 0,\n            },\n        },\n    },\n    '& tbody': {\n        '& tr': {\n            '& td': {\n                paddingLeft: 0,\n                textTransform: 'capitalize',\n            },\n        },\n    },\n}))\n\nconst subscribarList = [\n    {\n        name: 'john doe',\n        date: '18 january, 2019',\n        amount: 1000,\n        status: 'close',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'kessy bryan',\n        date: '10 january, 2019',\n        amount: 9000,\n        status: 'open',\n        company: 'My Fintech LTD.',\n    },\n    {\n        name: 'kessy bryan',\n        date: '10 january, 2019',\n        amount: 9000,\n        status: 'open',\n        company: 'My Fintech LTD.',\n    },\n    {\n        name: 'james cassegne',\n        date: '8 january, 2019',\n        amount: 5000,\n        status: 'close',\n        company: 'Collboy Tech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n]\n\nconst PaginationTable = () => {\n    const [rowsPerPage, setRowsPerPage] = React.useState(5)\n    const [page, setPage] = React.useState(0)\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value)\n        setPage(0)\n    }\n\n    return (\n        <Box width=\"100%\" overflow=\"auto\">\n            <StyledTable>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Company</TableCell>\n                        <TableCell>Start Date</TableCell>\n                        <TableCell>Status</TableCell>\n                        <TableCell>Amount</TableCell>\n                        <TableCell>Action</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {subscribarList\n                        .slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage\n                        )\n                        .map((subscriber, index) => (\n                            <TableRow key={index}>\n                                <TableCell align=\"left\">\n                                    {subscriber.name}\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    {subscriber.company}\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    {subscriber.date}\n                                </TableCell>\n                                <TableCell>{subscriber.status}</TableCell>\n                                <TableCell>${subscriber.amount}</TableCell>\n                                <TableCell>\n                                    <IconButton>\n                                        <Icon color=\"error\">close</Icon>\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </StyledTable>\n\n            <TablePagination\n                sx={{ px: 2 }}\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={subscribarList.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                backIconButtonProps={{\n                    'aria-label': 'Previous Page',\n                }}\n                nextIconButtonProps={{\n                    'aria-label': 'Next Page',\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </Box>\n    )\n}\n\nexport default PaginationTable\n","import React from 'react'\nimport SimpleTable from './SimpleTable'\nimport PaginationTable from './PaginationTable'\nimport { Breadcrumb, SimpleCard } from 'app/components'\nimport { Box, styled } from '@mui/system'\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    '& .breadcrumb': {\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '16px',\n        },\n    },\n}))\n\nconst AppTable = () => {\n    return (\n        <Container>\n            <div className=\"breadcrumb\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Material', path: '/material' },\n                        { name: 'Table' },\n                    ]}\n                />\n            </div>\n            <SimpleCard title=\"Simple Table\">\n                <SimpleTable />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"Pagination Table\">\n                <PaginationTable />\n            </SimpleCard>\n        </Container>\n    )\n}\n\nexport default AppTable\n"],"sourceRoot":""}