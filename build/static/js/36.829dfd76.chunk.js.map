{"version":3,"sources":["app/views/material-kit/snackbar/SimpleSnackbar.jsx","app/views/material-kit/snackbar/CustomizedSnackbar.jsx","app/views/material-kit/snackbar/PositionedSnackbar.jsx","app/views/material-kit/snackbar/LongLengthSnackbar.jsx","app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx","app/views/material-kit/snackbar/DirectionSnackbar.jsx","app/views/material-kit/snackbar/StackedSnackbar.jsx","app/views/material-kit/snackbar/TransitionSnackbar.jsx","app/views/material-kit/snackbar/AppSnackbar.jsx"],"names":["SimpleSnackbar","theme","useTheme","open","setOpen","React","useState","handleClose","event","reason","Button","onClick","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","id","action","color","size","IconButton","sx","padding","spacing","InfoIcon","ErrorIcon","WarningIcon","CheckCircleIcon","ContentRoot","styled","backgroundColor","green","palette","error","main","primary","amber","fontSize","opacity","marginRight","display","alignItems","margin","CustomizedSnackbars","variant","className","Alert","severity","width","m","PositionedSnackbar","state","setState","handleClick","newState","SnackbarRoot","maxWidth","LongTextSnackbar","SnackbarContent","StyledIconButton","ConsecutiveSnackbars","Component","queue","this","push","key","Date","getTime","processQueue","length","messageInfo","shift","handleExited","render","onExited","TransitionLeft","props","Slide","direction","TransitionUp","TransitionRight","TransitionDown","DirectionSnackbar","Transition","TransitionComponent","StackedSnackbar","enqueueSnackbar","useSnackbar","Fragment","IntegrationNotistack","maxSnack","SlideTransition","GrowTransition","Grow","TransitionsSnackbar","Fade","Container","breakpoints","down","marginBottom","AppSnackbar","routeSegments","name","path","title","Box","py","ConsecutiveSnackbar"],"mappings":"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","file":"static/js/36.829dfd76.chunk.js","sourcesContent":["import React from 'react'\nimport { useTheme } from '@mui/system'\nimport { Button, Snackbar, IconButton } from '@mui/material'\nimport CloseIcon from '@mui/icons-material/Close'\n\nexport default function SimpleSnackbar() {\n    const theme = useTheme()\n    const [open, setOpen] = React.useState(false)\n\n    function handleClick() {\n        setOpen(true)\n    }\n\n    function handleClose(event, reason) {\n        if (reason === 'clickaway') {\n            return\n        }\n        setOpen(false)\n    }\n\n    return (\n        <div>\n            <Button onClick={handleClick}>Open simple snackbar</Button>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={open}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">Note archived</span>}\n                action={[\n                    <Button\n                        key=\"undo\"\n                        color=\"secondary\"\n                        size=\"small\"\n                        onClick={handleClose}\n                    >\n                        UNDO\n                    </Button>,\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        onClick={handleClose}\n                        sx={{ padding: theme.spacing(0.5) }}\n                    >\n                        <CloseIcon />\n                    </IconButton>,\n                ]}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { styled } from '@mui/system'\nimport InfoIcon from '@mui/icons-material/Info'\nimport ErrorIcon from '@mui/icons-material/Error'\nimport CloseIcon from '@mui/icons-material/Close'\nimport IconButton from '@mui/material/IconButton'\nimport { amber, green } from '@mui/material/colors'\nimport WarningIcon from '@mui/icons-material/Warning'\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle'\nimport { Alert, Button, Snackbar, SnackbarContent } from '@mui/material'\n\nconst variantIcon = {\n    info: InfoIcon,\n    error: ErrorIcon,\n    warning: WarningIcon,\n    success: CheckCircleIcon,\n}\n\nconst ContentRoot = styled('div')(({ theme }) => ({\n    '& .success': {\n        backgroundColor: green[600],\n    },\n    '& .error': {\n        backgroundColor: theme.palette.error.main,\n    },\n    '& .info': {\n        backgroundColor: theme.palette.primary.main,\n    },\n    '& .warning': {\n        backgroundColor: amber[700],\n    },\n    '& .icon': {\n        fontSize: 20,\n    },\n    '& .iconVariant': {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    '& .message': {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    '& .margin': {\n        margin: theme.spacing(1),\n    },\n}))\n\nexport default function CustomizedSnackbars() {\n    const [open, setOpen] = React.useState(false)\n\n    function handleClick() {\n        setOpen(true)\n    }\n    function handleClose(event, reason) {\n        if (reason === 'clickaway') {\n            return\n        }\n        setOpen(false)\n    }\n\n    return (\n        <ContentRoot>\n            <Button variant=\"outlined\" className=\"margin\" onClick={handleClick}>\n                Open success snackbar\n            </Button>\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                <Alert\n                    onClose={handleClose}\n                    severity=\"success\"\n                    sx={{ width: '100%' }}\n                    variant=\"filled\"\n                >\n                    This is a success message!\n                </Alert>\n            </Snackbar>\n            <Alert\n                onClose={handleClose}\n                sx={{ m: 1 }}\n                severity=\"error\"\n                variant=\"filled\"\n            >\n                This is an error message!\n            </Alert>\n            <Alert\n                onClose={handleClose}\n                sx={{ m: 1 }}\n                severity=\"warning\"\n                variant=\"filled\"\n            >\n                This is a warning message!\n            </Alert>\n            <Alert\n                onClose={handleClose}\n                sx={{ m: 1 }}\n                severity=\"info\"\n                variant=\"filled\"\n            >\n                This is an information message!\n            </Alert>\n            <Alert\n                onClose={handleClose}\n                sx={{ m: 1 }}\n                severity=\"success\"\n                variant=\"filled\"\n            >\n                This is a success message!\n            </Alert>\n        </ContentRoot>\n    )\n}\n","import React from 'react'\nimport { Button, Snackbar } from '@mui/material'\n\nexport default function PositionedSnackbar() {\n    const [state, setState] = React.useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n    })\n\n    const { vertical, horizontal, open } = state\n\n    const handleClick = (newState) => () => {\n        setState({ open: true, ...newState })\n    }\n\n    function handleClose() {\n        setState({ ...state, open: false })\n    }\n\n    return (\n        <div>\n            <Button\n                onClick={handleClick({ vertical: 'top', horizontal: 'center' })}\n            >\n                Top-Center\n            </Button>\n            <Button\n                onClick={handleClick({ vertical: 'top', horizontal: 'right' })}\n            >\n                Top-Right\n            </Button>\n            <Button\n                onClick={handleClick({\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                })}\n            >\n                Bottom-Right\n            </Button>\n            <Button\n                onClick={handleClick({\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                })}\n            >\n                Bottom-Center\n            </Button>\n            <Button\n                onClick={handleClick({\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                })}\n            >\n                Bottom-Left\n            </Button>\n            <Button\n                onClick={handleClick({ vertical: 'top', horizontal: 'left' })}\n            >\n                Top-Left\n            </Button>\n            <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                key={`${vertical},${horizontal}`}\n                open={open}\n                onClose={handleClose}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">I love snacks</span>}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport { styled } from '@mui/system'\nimport { Button, SnackbarContent } from '@mui/material'\n\nconst action = (\n    <Button color=\"secondary\" size=\"small\">\n        lorem ipsum dolorem\n    </Button>\n)\n\nconst SnackbarRoot = styled('div')(({ theme }) => ({\n    maxWidth: 600,\n    '& .snackbar': {\n        margin: theme.spacing(1),\n    },\n}))\n\nexport default function LongTextSnackbar() {\n    return (\n        <SnackbarRoot>\n            <SnackbarContent\n                className='snackbar'\n                message=\"I love snacks.\"\n                action={action}\n            />\n            <SnackbarContent\n                className='snackbar'\n                message={`I love candy. I love cookies. I love cupcakes. \\\n          I love cheesecake. I love chocolate.`}\n            />\n            <SnackbarContent\n                className='snackbar'\n                message=\"I love candy. I love cookies. I love cupcakes.\"\n                action={action}\n            />\n            <SnackbarContent\n                className='snackbar'\n                message={\n                    'I love candy. I love cookies. I love cupcakes. \\\n          I love cheesecake. I love chocolate.'\n                }\n                action={action}\n            />\n        </SnackbarRoot>\n    )\n}\n","import React from 'react'\nimport { styled } from '@mui/system'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { Button, Snackbar, IconButton } from '@mui/material'\n\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\n    padding: theme.spacing(0.5)\n}))\n\nclass ConsecutiveSnackbars extends React.Component {\n    queue = []\n    state = {\n        open: false,\n    }\n\n    handleClick = (message) => () => {\n        this.queue.push({\n            message,\n            key: new Date().getTime(),\n        })\n\n        if (this.state.open) {\n            // immediately begin dismissing current message\n            // to start showing new one\n            this.setState({ open: false })\n        } else {\n            this.processQueue()\n        }\n    }\n\n    processQueue = () => {\n        if (this.queue.length > 0) {\n            this.setState({\n                messageInfo: this.queue.shift(),\n                open: true,\n            })\n        }\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return\n        }\n        this.setState({ open: false })\n    }\n\n    handleExited = () => {\n        this.processQueue()\n    }\n\n    render() {\n        const { messageInfo = {} } = this.state\n\n        return (\n            <div>\n                <Button onClick={this.handleClick('Message A')}>\n                    Show message A\n                </Button>\n                <Button onClick={this.handleClick('Message B')}>\n                    Show message B\n                </Button>\n                <Snackbar\n                    key={messageInfo.key}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.state.open}\n                    autoHideDuration={6000}\n                    onClose={this.handleClose}\n                    onExited={this.handleExited}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                    message={<span id=\"message-id\">{messageInfo.message}</span>}\n                    action={[\n                        <Button\n                            key=\"undo\"\n                            color=\"secondary\"\n                            size=\"small\"\n                            onClick={this.handleClose}\n                        >\n                            UNDO\n                        </Button>,\n                        <StyledIconButton\n                            key=\"close\"\n                            aria-label=\"Close\"\n                            color=\"inherit\"\n                            onClick={this.handleClose}\n                        >\n                            <CloseIcon />\n                        </StyledIconButton>,\n                    ]}\n                />\n            </div>\n        )\n    }\n}\n\nexport default ConsecutiveSnackbars\n","import React from 'react'\nimport { Slide, Button, Snackbar } from '@mui/material'\n\nfunction TransitionLeft(props) {\n    return <Slide {...props} direction=\"left\" />\n}\n\nfunction TransitionUp(props) {\n    return <Slide {...props} direction=\"up\" />\n}\n\nfunction TransitionRight(props) {\n    return <Slide {...props} direction=\"right\" />\n}\n\nfunction TransitionDown(props) {\n    return <Slide {...props} direction=\"down\" />\n}\n\nclass DirectionSnackbar extends React.Component {\n    state = {\n        open: false,\n    }\n\n    handleClick = (Transition) => () => {\n        this.setState({ open: true, Transition })\n    }\n\n    handleClose = () => {\n        this.setState({ open: false })\n    }\n\n    render() {\n        return (\n            <div>\n                <Button onClick={this.handleClick(TransitionLeft)}>\n                    Right\n                </Button>\n                <Button onClick={this.handleClick(TransitionUp)}>Up</Button>\n                <Button onClick={this.handleClick(TransitionRight)}>\n                    Left\n                </Button>\n                <Button onClick={this.handleClick(TransitionDown)}>Down</Button>\n                <Snackbar\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    TransitionComponent={this.state.Transition}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                    message={<span id=\"message-id\">I love snacks</span>}\n                />\n            </div>\n        )\n    }\n}\n\nexport default DirectionSnackbar\n","import React from 'react'\nimport { Button } from '@mui/material'\nimport { SnackbarProvider, useSnackbar } from 'notistack'\n\nfunction StackedSnackbar() {\n    const { enqueueSnackbar } = useSnackbar()\n\n    const handleClick = () => {\n        enqueueSnackbar('I love snacks.')\n    }\n\n    const handleClickVariant = (variant) => () => {\n        // variant could be success, error, warning, info, or default\n        enqueueSnackbar('This is a warning message!', { variant })\n    }\n\n    return (\n        <React.Fragment>\n            <Button onClick={handleClick}>Show snackbar</Button>\n            <Button onClick={handleClickVariant('warning')}>\n                Show warning snackbar\n            </Button>\n        </React.Fragment>\n    )\n}\n\nexport default function IntegrationNotistack() {\n    return (\n        <SnackbarProvider maxSnack={3}>\n            <StackedSnackbar />\n        </SnackbarProvider>\n    )\n}\n","import React from 'react'\nimport { Grow, Fade, Slide, Button, Snackbar } from '@mui/material'\n\nfunction SlideTransition(props) {\n    return <Slide {...props} direction=\"up\" />\n}\n\nfunction GrowTransition(props) {\n    return <Grow {...props} />\n}\n\nexport default function TransitionsSnackbar() {\n    const [state, setState] = React.useState({\n        open: false,\n        Transition: Fade,\n    })\n\n    const handleClick = (Transition) => () => {\n        setState({\n            open: true,\n            Transition,\n        })\n    }\n\n    function handleClose() {\n        setState({\n            ...state,\n            open: false,\n        })\n    }\n\n    return (\n        <div>\n            <Button onClick={handleClick(GrowTransition)}>\n                Grow Transition\n            </Button>\n            <Button onClick={handleClick(Fade)}>Fade Transition</Button>\n            <Button onClick={handleClick(SlideTransition)}>\n                Slide Transition\n            </Button>\n            <Snackbar\n                open={state.open}\n                onClose={handleClose}\n                TransitionComponent={state.Transition}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">I love snacks</span>}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport { Breadcrumb, SimpleCard } from 'app/components'\nimport SimpleSnackbar from './SimpleSnackbar'\nimport CustomizedSnackbars from './CustomizedSnackbar'\nimport PositionedSnackbar from './PositionedSnackbar'\nimport LongTextSnackbar from './LongLengthSnackbar'\nimport ConsecutiveSnackbar from './ConsecutiveSnackbar'\nimport DirectionSnackbar from './DirectionSnackbar'\nimport IntegrationNotistack from './StackedSnackbar'\nimport TransitionsSnackbar from './TransitionSnackbar'\nimport { Box, styled } from '@mui/system'\n\nconst Container = styled('div')(({ theme }) => ({\n    margin: '30px',\n    [theme.breakpoints.down('sm')]: {\n        margin: '16px',\n    },\n    '& .breadcrumb': {\n        marginBottom: '30px',\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '16px',\n        },\n    },\n}))\n\nconst AppSnackbar = () => {\n    return (\n        <Container>\n            <div className=\"breadcrumb\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Material', path: '/material' },\n                        { name: 'Snackbar' },\n                    ]}\n                />\n            </div>\n            <SimpleCard title=\"simple snackbar\">\n                <SimpleSnackbar />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"customized snackbar\">\n                <CustomizedSnackbars />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"positioned snackbar\">\n                <PositionedSnackbar />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"message length\">\n                <LongTextSnackbar />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"transition\">\n                <TransitionsSnackbar />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"consecutive snackbar\">\n                <ConsecutiveSnackbar />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"Control Slide direction\">\n                <DirectionSnackbar />\n            </SimpleCard>\n            <Box py=\"12px\" />\n            <SimpleCard title=\"complementary project\">\n                <IntegrationNotistack />\n            </SimpleCard>\n        </Container>\n    )\n}\n\nexport default AppSnackbar\n"],"sourceRoot":""}