{"version":3,"sources":["app/components/Footer/Footer.jsx","app/components/ShoppingCart/ShoppingCart.jsx","app/contexts/NotificationContext.js","app/hooks/useNotification.js","app/components/NotificationBar/NotificationBar.jsx","app/components/MatxLayout/Layout1/Layout1Topbar.jsx","app/components/Brand/Brand.jsx","app/components/Sidenav/Sidenav.jsx","app/components/MatxLayout/Layout1/Layout1Sidenav.jsx","app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/components/SecondarySidebar/SecondarySidebarToggle.jsx","app/components/MatxCustomizer/BadgeSelected.jsx","app/components/MatxCustomizer/MatxCustomizer.jsx","app/components/SecondarySidebar/SecondarySidebarContent.jsx","app/components/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx","app/components/SecondarySidebar/SecondarySidebar.jsx","app/components/MatxLayout/Layout1/Layout1.jsx"],"names":["AppFooter","styled","Toolbar","display","alignItems","minHeight","topBarHeight","width","padding","flexDirection","margin","FooterContent","maxWidth","Footer","theme","useTheme","settings","useSettings","footerTheme","themes","footer","ThemeProvider","AppBar","color","position","sx","zIndex","href","Button","variant","m","StyledIconButton","IconButton","palette","text","primary","disabled","MiniCart","height","sideNavWidth","CartBox","paddingLeft","boxShadow","themeShadows","marginTop","marginBottom","marginLeft","fontWeight","ProductBox","transition","background","IMG","ProductDetails","marginRight","textAlign","flexGrow","whiteSpace","overflow","textOverflow","cartListLoaded","ShoppingCart","container","totalCost","setTotalCost","useState","panelOpen","setPanelOpen","dispatch","useDispatch","navigate","useNavigate","user","useAuth","cartList","useSelector","state","ecommerce","secondary","getCartList","id","handleDrawerToggle","useEffect","total","forEach","product","price","amount","textColor","onClick","Badge","badgeContent","length","Icon","activeTheme","Drawer","anchor","open","onClose","ModalProps","keepMounted","Box","map","mr","size","updateCartAmount","cursor","src","imgUrl","alt","title","deleteProductFromCart","userId","fontSize","borderRadius","toFixed","reducer","action","type","notifications","payload","NotificationContext","createContext","deleteNotification","clearNotifications","getNotifications","createNotification","NotificationProvider","children","useReducer","async","res","axios","get","data","e","console","error","Provider","value","post","notificationID","notification","useNotification","useContext","Notification","NotificationCard","opacity","DeleteButton","right","CardLeftContent","justifyContent","Heading","NotificationBar","React","className","to","path","style","textDecoration","Card","mx","mb","elevation","icon","name","heading","getTimeDifference","Date","timestamp","px","pt","pb","subtitle","TopbarRoot","top","TopbarContainer","paddingRight","main","breakpoints","down","UserMenu","StyledItem","MenuItem","minWidth","IconBox","Layout1Topbar","updateSettings","logout","isMdScreen","useMediaQuery","mode","layout1Settings","sidebarSettings","leftSidebar","menuButton","Hidden","xsDown","Avatar","avatar","memo","BrandRoot","StyledSpan","Span","Brand","StyledScrollBar","Scrollbar","SideNavMobile","left","bottom","up","Sidenav","options","suppressScrollX","items","navigations","activeLayoutSettingsName","activeLayout","activeLayoutSettings","updateSidebarMode","SidebarNavRoot","primaryBg","bgImgURL","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","NavListBox","Layout1Sidenav","primaryRGB","convertHexToRGB","smDown","Switch","onChange","checked","SidenavTheme","sidenavTheme","Toggle","SecondarySidebarToggle","toggle","secondarySidebar","contrastText","clsx","Fab","BadgeSelected","Label","backgroundColor","dark","transform","letterSpacing","MaxCustomaizer","paddingBottom","default","LayoutBox","Controller","demoLayouts","thumbnail","isPro","bgOpacity","topbar","fixed","MatxCustomizer","setOpen","tabIndex","setTabIndex","tooglePanel","handleTabChange","index","Tooltip","placement","ml","layout","invisible","Link","target","SidebarRoot","shadows","props","SecondarySidebarContent","my","SecondarySidenavTheme","classes","SecondarySidebar","secondarySidebarTheme","Layout1Root","ContentBox","overflowY","overflowX","LayoutContainer","verticalAlign","Layout1","topbarTheme","sidenavMode","show","showSidenav","sidenavWidth","getSidenavWidth","ref","useRef","layoutClasses","current","sidebarMode","perfectScrollbar"],"mappings":"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","file":"static/js/26.f883162d.chunk.js","sourcesContent":["import React from 'react'\nimport { Span, Paragraph } from '../Typography'\nimport useSettings from 'app/hooks/useSettings'\nimport { Button, Toolbar, AppBar, ThemeProvider } from '@mui/material'\nimport { styled, useTheme } from '@mui/system'\nimport { topBarHeight } from 'app/utils/constant'\n\nconst AppFooter = styled(Toolbar)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n    minHeight: topBarHeight,\n    '@media (max-width: 499px)': {\n        display: 'table',\n        width: '100%',\n        minHeight: 'auto',\n        padding: '1rem 0',\n        '& .container': {\n            flexDirection: 'column !important',\n            '& a': {\n                margin: '0 0 16px !important',\n            },\n        },\n    },\n}))\n\nconst FooterContent = styled('div')(() => ({\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0px 1rem',\n    maxWidth: '1170px',\n    margin: '0 auto',\n}))\n\nconst Footer = () => {\n    const theme = useTheme()\n    const { settings } = useSettings()\n\n    const footerTheme = settings.themes[settings.footer.theme] || theme\n\n    return (\n        <ThemeProvider theme={footerTheme}>\n            <AppBar\n                color=\"primary\"\n                position=\"static\"\n                sx={{ zIndex: 96 }}\n            >\n                <AppFooter>\n                    <FooterContent>\n                        <a href=\"https://ui-lib.com/downloads/matx-pro-react-admin/\">\n                            <Button variant=\"contained\" color=\"secondary\">\n                                Get MatX Pro\n                            </Button>\n                        </a>\n                        <Span sx={{ m: \"auto\" }}></Span>\n                        <Paragraph sx={{ m: 0 }}>\n                            Design and Developed by{' '}\n                            <a href=\"http://ui-lib.com\">UI Lib</a>\n                        </Paragraph>\n                    </FooterContent>\n                </AppFooter>\n            </AppBar>\n        </ThemeProvider>\n    )\n}\n\nexport default Footer\n","import { useEffect } from 'react'\nimport useAuth from 'app/hooks/useAuth'\nimport { H6, Small } from '../Typography'\nimport { Box, styled, useTheme } from '@mui/system'\nimport { useNavigate } from 'react-router-dom'\nimport useSettings from 'app/hooks/useSettings'\nimport React, { Fragment, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { themeShadows } from '../MatxTheme/themeColors'\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant'\nimport {\n    getCartList,\n    deleteProductFromCart,\n    updateCartAmount,\n} from 'app/redux/actions/EcommerceActions'\nimport {\n    Icon,\n    Badge,\n    IconButton,\n    Drawer,\n    Button,\n    ThemeProvider,\n} from '@mui/material'\n\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\n    '& span': {\n        color: theme.palette.text.primary,\n    },\n    '& #disable': {\n        color: theme.palette.text.disabled,\n    },\n}))\n\nconst MiniCart = styled('div')(({ theme }) => ({\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    width: sideNavWidth,\n}))\n\nconst CartBox = styled('div')(() => ({\n    padding: '4px',\n    paddingLeft: '16px',\n    display: 'flex',\n    alignItems: 'center',\n    boxShadow: themeShadows[6],\n    height: topBarHeight,\n    '& h5': {\n        marginTop: 0,\n        marginBottom: 0,\n        marginLeft: '16px',\n        fontWeight: '500',\n    },\n}))\n\nconst ProductBox = styled('div')(() => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: '8px 8px',\n    transition: 'background 300ms ease',\n    '&:hover': {\n        background: 'rgba(0,0,0,0.01)',\n    },\n}))\n\nconst IMG = styled('img')(() => ({\n    width: 48,\n}))\n\nconst ProductDetails = styled('div')(() => ({\n    marginRight: '8',\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    '& h6': {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        display: 'block',\n        width: 120,\n        marginBottom: '4px',\n    },\n}))\n\nlet cartListLoaded = false\n\nfunction ShoppingCart({ container }) {\n    const [totalCost, setTotalCost] = useState(0)\n    const [panelOpen, setPanelOpen] = useState(false)\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const { user } = useAuth()\n    const { cartList } = useSelector((state) => state.ecommerce)\n    const { settings } = useSettings()\n    const theme = useTheme()\n    const secondary = theme.palette.text.secondary\n\n    if (!cartListLoaded) {\n        dispatch(getCartList(user?.id))\n        cartListLoaded = true\n    }\n\n    const handleDrawerToggle = () => {\n        setPanelOpen(!panelOpen)\n    }\n\n    const handleCheckoutClick = () => {\n        if (totalCost > 0) {\n            navigate('/ecommerce/checkout')\n            setPanelOpen(false)\n        }\n    }\n\n    useEffect(() => {\n        let total = 0\n\n        cartList.forEach((product) => {\n            total += product.price * product.amount\n        })\n        setTotalCost(total)\n    }, [cartList])\n\n    const { palette } = useTheme()\n    const textColor = palette.text.primary\n\n    return (\n        <Fragment>\n            <IconButton onClick={handleDrawerToggle}>\n                <Badge color=\"secondary\" badgeContent={cartList.length}>\n                    <Icon sx={{ color: textColor }}>shopping_cart</Icon>\n                </Badge>\n            </IconButton>\n\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n                <Drawer\n                    container={container}\n                    variant=\"temporary\"\n                    anchor={'right'}\n                    open={panelOpen}\n                    onClose={handleDrawerToggle}\n                    ModalProps={{\n                        keepMounted: true,\n                    }}\n                >\n                    <MiniCart>\n                        <CartBox>\n                            <Icon color=\"primary\">shopping_cart</Icon>\n                            <h5>Cart</h5>\n                        </CartBox>\n\n                        <Box flexGrow={1} overflow=\"auto\">\n                            {cartList.map((product) => (\n                                <ProductBox key={product.id}>\n                                    <Box\n                                        mr=\"4px\"\n                                        display=\"flex\"\n                                        flexDirection=\"column\"\n                                    >\n                                        <StyledIconButton\n                                            size=\"small\"\n                                            onClick={() =>\n                                                dispatch(\n                                                    updateCartAmount(\n                                                        user.id,\n                                                        product.id,\n                                                        product.amount + 1\n                                                    )\n                                                )\n                                            }\n                                        >\n                                            <Icon sx={{ cursor: 'pinter' }}>\n                                                keyboard_arrow_up\n                                            </Icon>\n                                        </StyledIconButton>\n                                        <StyledIconButton\n                                            disabled={!(product.amount - 1)}\n                                            size=\"small\"\n                                            onClick={() =>\n                                                dispatch(\n                                                    updateCartAmount(\n                                                        user.id,\n                                                        product.id,\n                                                        product.amount - 1\n                                                    )\n                                                )\n                                            }\n                                        >\n                                            <Icon\n                                                id={\n                                                    !(product.amount - 1) &&\n                                                    'disable'\n                                                }\n                                            >\n                                                keyboard_arrow_down\n                                            </Icon>\n                                        </StyledIconButton>\n                                    </Box>\n                                    <Box mr={1}>\n                                        <IMG\n                                            src={product.imgUrl}\n                                            alt={product.title}\n                                        />\n                                    </Box>\n                                    <ProductDetails>\n                                        <H6>{product.title}</H6>\n                                        <Small sx={{ color: secondary }}>\n                                            ${product.price} x {product.amount}\n                                        </Small>\n                                    </ProductDetails>\n                                    <StyledIconButton\n                                        size=\"small\"\n                                        onClick={() =>\n                                            dispatch(\n                                                deleteProductFromCart(\n                                                    user.userId,\n                                                    product.id\n                                                )\n                                            )\n                                        }\n                                    >\n                                        <Icon fontSize=\"small\">clear</Icon>\n                                    </StyledIconButton>\n                                </ProductBox>\n                            ))}\n                        </Box>\n\n                        <Button\n                            sx={{ width: '100%', borderRadius: 0 }}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleCheckoutClick}\n                        >\n                            Checkout (${totalCost.toFixed(2)})\n                        </Button>\n                    </MiniCart>\n                </Drawer>\n            </ThemeProvider>\n        </Fragment>\n    )\n}\n\nexport default ShoppingCart\n","import React, { createContext, useEffect, useReducer } from 'react'\nimport axios from 'axios'\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'LOAD_NOTIFICATIONS': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        case 'DELETE_NOTIFICATION': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        case 'CLEAR_NOTIFICATIONS': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        default: {\n            return { ...state }\n        }\n    }\n}\n\nconst NotificationContext = createContext({\n    notifications: [],\n    deleteNotification: () => {},\n    clearNotifications: () => {},\n    getNotifications: () => {},\n    createNotification: () => {},\n})\n\nexport const NotificationProvider = ({ settings, children }) => {\n    const [state, dispatch] = useReducer(reducer, [])\n\n    const deleteNotification = async (notificationID) => {\n        try {\n            const res = await axios.post('/api/notification/delete', {\n                id: notificationID,\n            })\n            dispatch({\n                type: 'DELETE_NOTIFICATION',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const clearNotifications = async () => {\n        try {\n            const res = await axios.post('/api/notification/delete-all')\n            dispatch({\n                type: 'CLEAR_NOTIFICATIONS',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const getNotifications = async () => {\n        try {\n            const res = await axios.get('/api/notification')\n            dispatch({\n                type: 'LOAD_NOTIFICATIONS',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n    const createNotification = async (notification) => {\n        try {\n            const res = await axios.post('/api/notification/add', {\n                notification,\n            })\n            dispatch({\n                type: 'CREATE_NOTIFICATION',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    useEffect(() => {\n        getNotifications()\n    }, [])\n\n    return (\n        <NotificationContext.Provider\n            value={{\n                notifications: state.notifications,\n                deleteNotification,\n                clearNotifications,\n                getNotifications,\n                createNotification,\n            }}\n        >\n            {children}\n        </NotificationContext.Provider>\n    )\n}\n\nexport default NotificationContext\n","import { useContext } from 'react'\nimport NotificationContext from 'app/contexts/NotificationContext'\n\nconst useNotification = () => useContext(NotificationContext)\n\nexport default useNotification\n","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Small, Paragraph } from '../Typography'\nimport { themeShadows } from '../MatxTheme/themeColors'\nimport { getTimeDifference } from 'utils.js'\nimport useSettings from 'app/hooks/useSettings'\nimport useNotification from 'app/hooks/useNotification'\nimport { styled, Box, useTheme } from '@mui/system'\nimport {\n    Icon,\n    Badge,\n    Card,\n    Button,\n    IconButton,\n    Drawer,\n    ThemeProvider,\n} from '@mui/material'\nimport { sideNavWidth, topBarHeight } from 'app/utils/constant'\n\nconst Notification = styled('div')(() => ({\n    padding: '16px',\n    marginBottom: '16px',\n    display: 'flex',\n    alignItems: 'center',\n    height: topBarHeight,\n    boxShadow: themeShadows[6],\n    '& h5': {\n        marginLeft: '8px',\n        marginTop: 0,\n        marginBottom: 0,\n        fontWeight: '500',\n    },\n}))\n\nconst NotificationCard = styled(Box)(({ theme }) => ({\n    position: 'relative',\n    '&:hover': {\n        '& .messageTime': {\n            display: 'none',\n        },\n        '& .deleteButton': {\n            opacity: '1',\n        },\n    },\n    '& .messageTime': {\n        color: theme.palette.text.secondary,\n    },\n    '& .icon': { fontSize: '1.25rem' }\n}))\n\nconst DeleteButton = styled(IconButton)(({ theme }) => ({\n    opacity: '0',\n    position: 'absolute',\n    right: 5,\n    marginTop: 9,\n    marginRight: '24px',\n    background: 'rgba(0, 0, 0, 0.01)',\n}))\n\nconst CardLeftContent = styled('div')(({ theme }) => ({\n    padding: '12px 8px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    background: 'rgba(0, 0, 0, 0.01)',\n    '& small': {\n        fontWeight: '500',\n        marginLeft: '16px',\n        color: theme.palette.text.secondary,\n    },\n}))\n\nconst Heading = styled('span')(({ theme }) => ({\n    fontWeight: '500',\n    marginLeft: '16px',\n    color: theme.palette.text.secondary,\n}))\n\nconst NotificationBar = ({ container }) => {\n    const { settings } = useSettings()\n    const theme = useTheme()\n    const secondary = theme.palette.text.secondary\n    const [panelOpen, setPanelOpen] = React.useState(false)\n    const { deleteNotification, clearNotifications, notifications } =\n        useNotification()\n\n    const handleDrawerToggle = () => {\n        setPanelOpen(!panelOpen)\n    }\n\n    const { palette } = useTheme()\n    const textColor = palette.text.primary\n\n    return (\n        <Fragment>\n            <IconButton onClick={handleDrawerToggle}>\n                <Badge color=\"secondary\" badgeContent={notifications?.length}>\n                    <Icon sx={{ color: textColor }}>notifications</Icon>\n                </Badge>\n            </IconButton>\n\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n                <Drawer\n                    width={'100px'}\n                    container={container}\n                    variant=\"temporary\"\n                    anchor={'right'}\n                    open={panelOpen}\n                    onClose={handleDrawerToggle}\n                    ModalProps={{\n                        keepMounted: true,\n                    }}\n                >\n                    <Box sx={{ width: sideNavWidth }}>\n                        <Notification>\n                            <Icon color=\"primary\">notifications</Icon>\n                            <h5>Notifications</h5>\n                        </Notification>\n\n                        {notifications?.map((notification) => (\n                            <NotificationCard key={notification.id}>\n                                <DeleteButton\n                                    size=\"small\"\n                                    className=\"deleteButton\"\n                                    onClick={() =>\n                                        deleteNotification(notification.id)\n                                    }\n                                >\n                                    <Icon className=\"icon\">\n                                        clear\n                                    </Icon>\n                                </DeleteButton>\n                                <Link\n                                    to={`/${notification.path}`}\n                                    onClick={handleDrawerToggle}\n                                    style={{ textDecoration: 'none' }}\n                                >\n                                    <Card sx={{ mx: 2, mb: 3 }} elevation={3}>\n                                        <CardLeftContent>\n                                            <Box display=\"flex\">\n                                                <Icon\n                                                    className=\"icon\"\n                                                    color={notification.icon.color}\n                                                >\n                                                    {notification.icon.name}\n                                                </Icon>\n                                                <Heading>\n                                                    {notification.heading}\n                                                </Heading>\n                                            </Box>\n                                            <Small className=\"messageTime\">\n                                                {getTimeDifference(\n                                                    new Date(\n                                                        notification.timestamp\n                                                    )\n                                                )}ago\n                                            </Small>\n                                        </CardLeftContent>\n                                        <Box sx={{ px: 2, pt: 1, pb: 2 }}>\n                                            <Paragraph sx={{ m: 0 }}>\n                                                {notification.title}\n                                            </Paragraph>\n                                            <Small sx={{ color: secondary }}>\n                                                {notification.subtitle}\n                                            </Small>\n                                        </Box>\n                                    </Card>\n                                </Link>\n                            </NotificationCard>\n                        ))}\n                        {!!notifications?.length && (\n                            <Box sx={{ color: secondary }}>\n                                <Button onClick={clearNotifications}>\n                                    Clear Notifications\n                                </Button>\n                            </Box>\n                        )}\n                    </Box>\n                </Drawer>\n            </ThemeProvider>\n        </Fragment>\n    )\n}\n\nexport default NotificationBar\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport useAuth from 'app/hooks/useAuth'\nimport useSettings from 'app/hooks/useSettings'\nimport { styled, useTheme, Box } from '@mui/system'\nimport { Span } from '../../../components/Typography'\nimport { MatxMenu, MatxSearchBox } from 'app/components'\nimport ShoppingCart from '../../ShoppingCart/ShoppingCart'\nimport NotificationBar from '../../NotificationBar/NotificationBar'\nimport { themeShadows } from 'app/components/MatxTheme/themeColors'\nimport { NotificationProvider } from 'app/contexts/NotificationContext'\nimport {\n    Icon,\n    IconButton,\n    MenuItem,\n    Avatar,\n    useMediaQuery,\n    Hidden,\n} from '@mui/material'\nimport { topBarHeight } from 'app/utils/constant'\n\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\n    color: theme.palette.text.primary,\n}))\n\nconst TopbarRoot = styled('div')(({ theme }) => ({\n    top: 0,\n    zIndex: 96,\n    transition: 'all 0.3s ease',\n    boxShadow: themeShadows[8],\n    height: topBarHeight,\n}))\n\nconst TopbarContainer = styled(Box)(({ theme }) => ({\n    padding: '8px',\n    paddingLeft: 18,\n    paddingRight: 20,\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    background: theme.palette.primary.main,\n    [theme.breakpoints.down('sm')]: {\n        paddingLeft: 16,\n        paddingRight: 16,\n    },\n    [theme.breakpoints.down('xs')]: {\n        paddingLeft: 14,\n        paddingRight: 16,\n    },\n}))\n\nconst UserMenu = styled(Box)(() => ({\n    display: 'flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    borderRadius: 24,\n    padding: 4,\n    '& span': {\n        margin: '0 8px',\n    },\n}))\n\nconst StyledItem = styled(MenuItem)(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: 185,\n    '& a': {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        textDecoration: 'none',\n    },\n    '& span': {\n        marginRight: '10px',\n        color: theme.palette.text.primary,\n    },\n}))\n\nconst IconBox = styled('div')(({ theme }) => ({\n    display: 'inherit',\n    [theme.breakpoints.down('md')]: {\n        display: 'none !important',\n    },\n}))\n\nconst Layout1Topbar = () => {\n    const theme = useTheme()\n    const { settings, updateSettings } = useSettings()\n    const { logout, user } = useAuth()\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n    const updateSidebarMode = (sidebarSettings) => {\n        updateSettings({\n            layout1Settings: {\n                leftSidebar: {\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    const handleSidebarToggle = () => {\n        let { layout1Settings } = settings\n        let mode\n        if (isMdScreen) {\n            mode =\n                layout1Settings.leftSidebar.mode === 'close'\n                    ? 'mobile'\n                    : 'close'\n        } else {\n            mode =\n                layout1Settings.leftSidebar.mode === 'full' ? 'close' : 'full'\n        }\n        updateSidebarMode({ mode })\n    }\n\n    return (\n        <TopbarRoot>\n            <TopbarContainer>\n                <Box display=\"flex\">\n                    <StyledIconButton onClick={handleSidebarToggle}>\n                        <Icon>menu</Icon>\n                    </StyledIconButton>\n\n                    <IconBox>\n                        <StyledIconButton>\n                            <Icon>mail_outline</Icon>\n                        </StyledIconButton>\n\n                        <StyledIconButton>\n                            <Icon>web_asset</Icon>\n                        </StyledIconButton>\n\n                        <StyledIconButton>\n                            <Icon>star_outline</Icon>\n                        </StyledIconButton>\n                    </IconBox>\n                </Box>\n                <Box display=\"flex\" alignItems=\"center\">\n                    <MatxSearchBox />\n                    <NotificationProvider>\n                        <NotificationBar />\n                    </NotificationProvider>\n\n                    <ShoppingCart />\n\n                    <MatxMenu\n                        menuButton={\n                            <UserMenu>\n                                <Hidden xsDown>\n                                    <Span>\n                                        Hi <strong>{user?.name}</strong>\n                                    </Span>\n                                </Hidden>\n                                <Avatar\n                                    src={user?.avatar}\n                                    sx={{ cursor: 'pointer' }}\n                                />\n                            </UserMenu>\n                        }\n                    >\n                        <StyledItem>\n                            <Link to=\"/\">\n                                <Icon> home </Icon>\n                                <Span> Home </Span>\n                            </Link>\n                        </StyledItem>\n                        <StyledItem>\n                            <Link to=\"/page-layouts/user-profile\">\n                                <Icon> person </Icon>\n                                <Span> Profile </Span>\n                            </Link>\n                        </StyledItem>\n                        <StyledItem>\n                            <Icon> settings </Icon>\n                            <Span> Settings </Span>\n                        </StyledItem>\n                        <StyledItem onClick={logout}>\n                            <Icon> power_settings_new </Icon>\n                            <Span> Logout </Span>\n                        </StyledItem>\n                    </MatxMenu>\n                </Box>\n            </TopbarContainer>\n        </TopbarRoot>\n    )\n}\n\nexport default React.memo(Layout1Topbar)\n","import React from 'react'\nimport { MatxLogo } from 'app/components'\nimport { Span } from '../../components/Typography'\nimport { styled, Box } from '@mui/system'\nimport useSettings from 'app/hooks/useSettings'\n\nconst BrandRoot = styled(Box)(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '20px 18px 20px 29px',\n}))\n\nconst StyledSpan = styled(Span)(({ theme, mode }) => ({\n    fontSize: 18,\n    marginLeft: '.5rem',\n    display: mode === 'compact' ? 'none' : 'block',\n}))\n\nconst Brand = ({ children }) => {\n    const { settings } = useSettings()\n    const leftSidebar = settings.layout1Settings.leftSidebar\n    const { mode } = leftSidebar\n\n    return (\n        <BrandRoot>\n            <Box display=\"flex\" alignItems=\"center\">\n                <MatxLogo />\n                <StyledSpan mode={mode} className=\"sidenavHoverShow\">\n                    Matx\n                </StyledSpan>\n            </Box>\n            <Box\n                className=\"sidenavHoverShow\"\n                sx={{ display: mode === 'compact' ? 'none' : 'block' }}\n            >\n                {children || null}\n            </Box>\n        </BrandRoot>\n    )\n}\n\nexport default Brand\n","import React, { Fragment } from 'react'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport { navigations } from 'app/navigations'\nimport { MatxVerticalNav } from 'app/components'\nimport useSettings from 'app/hooks/useSettings'\nimport { styled } from '@mui/system'\n\nconst StyledScrollBar = styled(Scrollbar)(() => ({\n    paddingLeft: '1rem',\n    paddingRight: '1rem',\n    position: 'relative',\n}))\n\nconst SideNavMobile = styled('div')(({ theme }) => ({\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    width: '100vw',\n    background: 'rgba(0, 0, 0, 0.54)',\n    zIndex: -1,\n    [theme.breakpoints.up('lg')]: {\n        display: 'none',\n    },\n}))\n\nconst Sidenav = ({ children }) => {\n    const { settings, updateSettings } = useSettings()\n\n    const updateSidebarMode = (sidebarSettings) => {\n        let activeLayoutSettingsName = settings.activeLayout + 'Settings'\n        let activeLayoutSettings = settings[activeLayoutSettingsName]\n\n        updateSettings({\n            ...settings,\n            [activeLayoutSettingsName]: {\n                ...activeLayoutSettings,\n                leftSidebar: {\n                    ...activeLayoutSettings.leftSidebar,\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    return (\n        <Fragment>\n            <StyledScrollBar options={{ suppressScrollX: true }}>\n                {children}\n                <MatxVerticalNav items={navigations} />\n            </StyledScrollBar>\n\n            <SideNavMobile\n                onClick={() => updateSidebarMode({ mode: 'close' })}\n            />\n        </Fragment>\n    )\n}\n\nexport default Sidenav\n","import React from 'react'\nimport Brand from '../../Brand/Brand'\nimport { convertHexToRGB } from 'utils'\nimport { Box, styled, useTheme } from '@mui/system'\nimport Sidenav from '../../Sidenav/Sidenav'\nimport useSettings from 'app/hooks/useSettings'\nimport { Switch, Hidden } from '@mui/material'\nimport { themeShadows } from 'app/components/MatxTheme/themeColors'\nimport { sideNavWidth } from 'app/utils/constant'\n\nconst SidebarNavRoot = styled(Box)(({ theme, width, primaryBg, bgImgURL }) => ({\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    height: '100vh',\n    width: width,\n    boxShadow: themeShadows[8],\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'top',\n    backgroundSize: 'cover',\n    zIndex: 111,\n    overflow: 'hidden',\n    color: theme.palette.text.primary,\n    transition: 'all 250ms ease-in-out',\n    backgroundImage: `linear-gradient(to bottom, rgba(${primaryBg}, 0.96), rgba(${primaryBg}, 0.96)), url(${bgImgURL})`,\n    '&:hover': {\n        width: sideNavWidth,\n        '& .sidenavHoverShow': {\n            display: 'block',\n        },\n        '& .compactNavItem': {\n            width: '100%',\n            maxWidth: '100%',\n            '& .nav-bullet': {\n                display: 'block',\n            },\n            '& .nav-bullet-text': {\n                display: 'none',\n            },\n        },\n    },\n}))\n\nconst NavListBox = styled(Box)(() => ({\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n}))\n\nconst Layout1Sidenav = () => {\n    const theme = useTheme()\n    const { settings, updateSettings } = useSettings()\n    const leftSidebar = settings.layout1Settings.leftSidebar\n    const { mode, bgImgURL } = leftSidebar\n\n    const getSidenavWidth = () => {\n        switch (mode) {\n            case 'compact':\n                return 'var(--sidenav-compact-width)'\n            default:\n                return sideNavWidth\n        }\n    }\n    const primaryRGB = convertHexToRGB(theme.palette.primary.main)\n\n    const updateSidebarMode = (sidebarSettings) => {\n        updateSettings({\n            layout1Settings: {\n                leftSidebar: {\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    const handleSidenavToggle = () => {\n        updateSidebarMode({ mode: mode === 'compact' ? 'full' : 'compact' })\n    }\n\n    return (\n        <SidebarNavRoot\n            bgImgURL={bgImgURL}\n            primaryBg={primaryRGB}\n            width={getSidenavWidth()}\n        >\n            <NavListBox>\n                <Brand>\n                    <Hidden smDown>\n                        <Switch\n                            onChange={handleSidenavToggle}\n                            checked={leftSidebar.mode !== 'full'}\n                            color=\"secondary\"\n                            size=\"small\"\n                        />\n                    </Hidden>\n                </Brand>\n                <Sidenav />\n            </NavListBox>\n        </SidebarNavRoot>\n    )\n}\n\nexport default React.memo(Layout1Sidenav)\n","import React from 'react'\nimport useSettings from 'app/hooks/useSettings'\nimport { ThemeProvider, useTheme } from '@mui/material'\n\nconst SidenavTheme = ({ children }) => {\n    const theme = useTheme()\n    const { settings } = useSettings()\n    const sidenavTheme =\n        settings.themes[settings.layout1Settings.leftSidebar.theme] || theme\n\n    return <ThemeProvider theme={sidenavTheme}>{children}</ThemeProvider>\n}\n\nexport default SidenavTheme\n","import clsx from 'clsx'\nimport React from 'react'\nimport { styled, useTheme } from '@mui/system'\nimport useSettings from 'app/hooks/useSettings'\nimport { Fab, IconButton, Icon } from '@mui/material'\n\nconst Toggle = styled('div')(() => ({\n    position: 'fixed',\n    right: '30px',\n    bottom: '50px',\n    zIndex: 99,\n    transition: 'all 0.15s ease',\n    '&.open': {\n        right: '10px',\n    },\n}))\n\nconst SecondarySidebarToggle = () => {\n    const { settings, updateSettings } = useSettings()\n\n    const toggle = () => {\n        updateSettings({\n            secondarySidebar: { open: !settings.secondarySidebar.open },\n        })\n    }\n\n    // useEffect(() => {\n    //   updateSettings({\n    //     secondarySidebar: { open: !isMobile },\n    //   });\n    // }, [isMobile]);\n\n    const { palette } = useTheme()\n    const textColor = palette.primary.contrastText\n\n    return (\n        <Toggle className={clsx({ open: settings.secondarySidebar.open })}>\n            {settings.secondarySidebar.open && (\n                <IconButton onClick={toggle} size=\"small\" aria-label=\"toggle\">\n                    <Icon sx={{ color: textColor }}>close</Icon>\n                </IconButton>\n            )}\n            {!settings.secondarySidebar.open && (\n                <Fab color=\"primary\" aria-label=\"expand\" onClick={toggle}>\n                    <Icon sx={{ color: textColor }}>settings</Icon>\n                </Fab>\n            )}\n        </Toggle>\n    )\n}\n\nexport default SecondarySidebarToggle\n","import { Badge } from '@mui/material'\nimport { styled } from '@mui/system'\n\nconst BadgeSelected = styled(Badge)(() => ({\n    top: '0',\n    right: '0',\n    height: '32px',\n    width: '32px',\n    borderRadius: '50%',\n}))\n\nexport default BadgeSelected\n","import { H5, Span } from '../Typography'\nimport BadgeSelected from './BadgeSelected'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport useSettings from 'app/hooks/useSettings'\nimport React, { Fragment, useState } from 'react'\nimport { styled, Box, useTheme } from '@mui/system'\nimport { themeShadows } from '../MatxTheme/themeColors'\nimport {\n    Icon,\n    Card,\n    Link,\n    Button,\n    Drawer,\n    Tooltip,\n    IconButton,\n    ThemeProvider,\n} from '@mui/material'\n\nconst Label = styled(Span)(({ theme }) => ({\n    color: theme.palette.secondary.main,\n    backgroundColor: theme.palette.primary.dark,\n    fontWeight: 700,\n    transform: 'rotate(90deg)',\n    marginBottom: '2.5rem',\n    padding: '.25rem .5rem',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    letterSpacing: '1.5px',\n    fontSize: '1rem',\n    '&:hover, &.open': {\n        backgroundColor: theme.palette.secondary.main,\n        color: theme.palette.secondary.contrastText,\n    },\n}))\n\nconst MaxCustomaizer = styled('div')(({ theme }) => ({\n    height: '100vh',\n    width: 320,\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    zIndex: 50,\n    display: 'flex',\n    flexDirection: 'column',\n    paddingBottom: '32px',\n    boxShadow: themeShadows[12],\n    background: theme.palette.background.default,\n    '& .helpText': {\n        margin: '0px .5rem 1rem',\n    },\n}))\n\nconst LayoutBox = styled(BadgeSelected)(() => ({\n    width: '100%',\n    height: '152px !important',\n    cursor: 'pointer',\n    marginTop: '12px',\n    marginBottom: '12px',\n    '& .layout-name': {\n        display: 'none',\n    },\n    '&:hover .layout-name': {\n        position: 'absolute',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n        background: 'rgba(0,0,0,0.3)',\n        zIndex: 12,\n    },\n}))\n\nconst Controller = styled('div')(() => ({\n    minHeight: 58,\n    padding: '14px 20px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: '16px',\n    boxShadow: themeShadows[6],\n}))\n\nconst IMG = styled('img')(() => ({\n    width: '100%',\n}))\n\nconst StyledScrollBar = styled(Scrollbar)(() => ({\n    paddingLeft: '16px',\n    paddingRight: '16px',\n}))\n\nconst MatxCustomizer = () => {\n    const [open, setOpen] = useState(false)\n    const [tabIndex, setTabIndex] = useState(0)\n    const { settings, updateSettings } = useSettings()\n    const theme = useTheme()\n    const secondary = theme.palette.text.secondary\n\n    const tooglePanel = () => {\n        setOpen(!open)\n    }\n    const handleTabChange = (index) => {\n        setTabIndex(index)\n    }\n    let activeTheme = { ...settings.themes[settings.activeTheme] }\n\n    return (\n        <Fragment>\n            <Tooltip title=\"Theme Settings\" placement=\"left\">\n                <Label className=\"open\" onClick={tooglePanel}>\n                    DEMOS\n                </Label>\n            </Tooltip>\n\n            <ThemeProvider theme={activeTheme}>\n                <Drawer\n                    anchor={'right'}\n                    open={open}\n                    variant=\"temporary\"\n                    onClose={tooglePanel}\n                    ModalProps={{\n                        keepMounted: true,\n                    }}\n                >\n                    <MaxCustomaizer>\n                        <Controller>\n                            <Box display=\"flex\">\n                                <Icon className=\"icon\" color=\"primary\">\n                                    settings\n                                </Icon>\n                                <H5 sx={{ ml: 1, fontSize: '1rem' }}>\n                                    Theme Settings\n                                </H5>\n                            </Box>\n                            <IconButton onClick={tooglePanel}>\n                                <Icon className=\"icon\">close</Icon>\n                            </IconButton>\n                        </Controller>\n                        <Box px={3} mb={2} display=\"flex\">\n                            <Button\n                                variant=\"outlined\"\n                                color={tabIndex === 0 ? 'secondary' : 'primary'}\n                                onClick={() => handleTabChange(0)}\n                                sx={{ mr: 2 }}\n                            >\n                                Demos\n                            </Button>\n                            <Button\n                                variant=\"outlined\"\n                                color={tabIndex === 1 ? 'secondary' : 'primary'}\n                                onClick={() => handleTabChange(1)}\n                            >\n                                Settings\n                            </Button>\n                        </Box>\n\n                        <StyledScrollBar options={{ suppressScrollX: true }}>\n                            {tabIndex === 0 && (\n                                <Box sx={{ mb: 4, mx: 3 }}>\n                                    <Box sx={{ color: secondary }}>Layouts</Box>\n\n                                    <Box display=\"flex\" flexDirection=\"column\">\n                                        {demoLayouts.map((layout) => (\n                                            <LayoutBox\n                                                color=\"secondary\"\n                                                badgeContent={'Pro'}\n                                                invisible={!layout.isPro}\n                                                key={layout.name}\n                                            >\n                                                <Card\n                                                    sx={{\n                                                        position: 'relative',\n                                                    }}\n                                                    onClick={() =>\n                                                        updateSettings(\n                                                            layout.options\n                                                        )\n                                                    }\n                                                    elevation={4}\n                                                >\n                                                    <Box\n                                                        sx={{\n                                                            overflow: 'hidden',\n                                                        }}\n                                                        className=\"layout-name\"\n                                                    >\n                                                        <Button\n                                                            variant=\"contained\"\n                                                            color=\"secondary\"\n                                                        >\n                                                            {layout.name}\n                                                        </Button>\n                                                    </Box>\n\n                                                    <IMG\n                                                        src={layout.thumbnail}\n                                                        alt={layout.name}\n                                                    />\n                                                </Card>\n                                            </LayoutBox>\n                                        ))}\n                                    </Box>\n                                </Box>\n                            )}\n\n                            {/* END LAYOUT */}\n                            {tabIndex === 1 && (\n                                <div>\n                                    <div className=\"helpText\">\n                                        We used React context API to control\n                                        layout. Check out the{' '}\n                                        <Link\n                                            href=\"http://demos.ui-lib.com/matx-react-doc/layout.html\"\n                                            target=\"_blank\"\n                                        >\n                                            Documentation\n                                        </Link>\n                                    </div>\n                                </div>\n                            )}\n                        </StyledScrollBar>\n                    </MaxCustomaizer>\n                </Drawer>\n            </ThemeProvider>\n        </Fragment>\n    )\n}\n\nconst demoLayouts = [\n    {\n        name: 'Light Sidebar',\n        thumbnail: '/assets/images/screenshots/layout1-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'full',\n                    theme: 'whiteBlue',\n                    bgOpacity: 0.98,\n                },\n                topbar: {\n                    theme: 'blueDark',\n                    fixed: true,\n                },\n            },\n            footer: {\n                theme: 'slateDark1',\n            },\n        },\n    },\n    {\n        name: 'Compact Sidebar',\n        thumbnail: '/assets/images/screenshots/layout5-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'compact',\n                    theme: 'slateDark1',\n                    bgOpacity: 0.92,\n                },\n                topbar: {\n                    theme: 'whiteBlue',\n                    fixed: true,\n                },\n            },\n        },\n    },\n    {\n        name: 'Dark Sidebar',\n        thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'full',\n                    theme: 'slateDark1',\n                    bgOpacity: 0.92,\n                },\n                topbar: {\n                    theme: 'blueDark',\n                    fixed: true,\n                },\n            },\n        },\n    },\n]\n\nexport default MatxCustomizer\n","import React from 'react'\nimport { styled, useTheme } from '@mui/system'\nimport { Chatbox } from 'app/components'\nimport { ChatHead } from 'app/components'\nimport { Span } from '../Typography'\nimport { IconButton, Icon } from '@mui/material'\nimport ShoppingCart from '../ShoppingCart/ShoppingCart'\nimport MatxCustomizer from '../MatxCustomizer/MatxCustomizer'\n\nconst SidebarRoot = styled('div')(({ theme, width }) => ({\n    position: 'fixed',\n    height: '100vh',\n    width: width,\n    right: 0,\n    bottom: 0,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    boxShadow: theme.shadows[8],\n    backgroundColor: theme.palette.primary.main,\n    zIndex: 98,\n    transition: 'all 0.15s ease',\n    color: theme.palette.text.primary,\n    '@global': {\n        '@media screen and (min-width: 767px)': {\n            '.content-wrap, .layout2.layout-contained, .layout2.layout-full': {\n                marginRight: (props) => props.width,\n            },\n            '.matx-customizer': {\n                right: (props) => props.width,\n            },\n        },\n        '@media screen and (max-width: 959px)': {\n            '.toolbar-menu-wrap .menu-area': {\n                width: (props) => `calc(100% - ${props.width})`,\n            },\n        },\n    },\n}))\n\nconst SecondarySidebarContent = () => {\n    const { palette } = useTheme()\n    const textColor = palette.primary.contrastText\n    return (\n        <SidebarRoot width={'50px'} className=\"secondary-sidebar\">\n            <Span sx={{ m: 'auto' }}></Span>\n            <MatxCustomizer />\n            <ShoppingCart />\n\n            <ChatHead\n                icon={\n                    <IconButton\n                        sx={{ my: '12px', color: textColor }}\n                        size=\"small\"\n                    >\n                        <Icon>comments</Icon>\n                    </IconButton>\n                }\n            >\n                <Chatbox />\n            </ChatHead>\n            <Span sx={{ m: 'auto' }}></Span>\n        </SidebarRoot>\n    )\n}\n\nexport default SecondarySidebarContent\n","import React from 'react'\nimport { ThemeProvider } from '@mui/material'\n\nconst SecondarySidenavTheme = ({ theme, classes, children, open }) => {\n    return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n}\nexport default SecondarySidenavTheme\n","import React from 'react'\nimport useSettings from 'app/hooks/useSettings'\nimport SecondarySidebarToggle from './SecondarySidebarToggle'\nimport SecondarySidebarContent from './SecondarySidebarContent'\nimport SecondarySidenavTheme from '../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme'\n\nconst SecondarySidebar = () => {\n    const { settings } = useSettings()\n    const secondarySidebarTheme =\n        settings.themes[settings.secondarySidebar.theme]\n\n    return (\n        <SecondarySidenavTheme theme={secondarySidebarTheme}>\n            {settings.secondarySidebar.open && <SecondarySidebarContent />}\n            <SecondarySidebarToggle />\n        </SecondarySidenavTheme>\n    )\n}\n\nexport default SecondarySidebar\n","import Footer from '../../Footer/Footer'\nimport Layout1Topbar from './Layout1Topbar'\nimport { MatxSuspense } from 'app/components'\nimport Layout1Sidenav from './Layout1Sidenav'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport useSettings from 'app/hooks/useSettings'\nimport { styled, Box, useTheme } from '@mui/system'\nimport React, { useEffect, useRef } from 'react'\nimport { ThemeProvider, useMediaQuery } from '@mui/material'\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme'\nimport SecondarySidebar from '../../SecondarySidebar/SecondarySidebar'\nimport { sideNavWidth } from 'app/utils/constant'\nimport { Outlet } from 'react-router-dom'\n\nconst Layout1Root = styled(Box)(({ theme }) => ({\n    display: 'flex',\n    background: theme.palette.background.default,\n}))\n\nconst ContentBox = styled(Box)(() => ({\n    height: '100%',\n    display: 'flex',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n}))\n\nconst StyledScrollBar = styled(Scrollbar)(() => ({\n    height: '100%',\n    position: 'relative',\n    display: 'flex',\n    flexGrow: '1',\n    flexDirection: 'column',\n}))\n\nconst LayoutContainer = styled(Box)(({ width, secondarySidebar }) => ({\n    height: '100vh',\n    display: 'flex',\n    flexGrow: '1',\n    flexDirection: 'column',\n    verticalAlign: 'top',\n    marginLeft: width,\n    position: 'relative',\n    overflow: 'hidden',\n    transition: 'all 0.3s ease',\n    marginRight: secondarySidebar.open ? 50 : 0,\n}))\n\nconst Layout1 = () => {\n    const { settings, updateSettings } = useSettings()\n    const { layout1Settings, secondarySidebar } = settings\n    const topbarTheme = settings.themes[layout1Settings.topbar.theme]\n    const {\n        leftSidebar: { mode: sidenavMode, show: showSidenav },\n    } = layout1Settings\n\n    const getSidenavWidth = () => {\n        switch (sidenavMode) {\n            case 'full':\n                return sideNavWidth\n            case 'compact':\n                return 'var(--sidenav-compact-width)'\n            default:\n                return '0px'\n        }\n    }\n\n    const sidenavWidth = getSidenavWidth()\n    const theme = useTheme()\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n    const ref = useRef({ isMdScreen, settings })\n    const layoutClasses = `theme-${theme.palette.type}`\n\n    useEffect(() => {\n        let { settings } = ref.current\n        let sidebarMode = settings.layout1Settings.leftSidebar.mode\n        if (settings.layout1Settings.leftSidebar.show) {\n            let mode = isMdScreen ? 'close' : sidebarMode\n            updateSettings({ layout1Settings: { leftSidebar: { mode } } })\n        }\n    }, [isMdScreen])\n\n    return (\n        <Layout1Root className={layoutClasses}>\n            {showSidenav && sidenavMode !== 'close' && (\n                <SidenavTheme>\n                    <Layout1Sidenav />\n                </SidenavTheme>\n            )}\n\n            <LayoutContainer\n                width={sidenavWidth}\n                secondarySidebar={secondarySidebar}\n            >\n                {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\n                    // <Layout1Topbar fixed={true} />\n                    <ThemeProvider theme={topbarTheme}>\n                        <Layout1Topbar fixed={true} className=\"elevation-z8\" />\n                    </ThemeProvider>\n                )}\n                {settings.perfectScrollbar && (\n                    <StyledScrollBar>\n                        {layout1Settings.topbar.show &&\n                            !layout1Settings.topbar.fixed && (\n                                // <Layout1Topbar />\n                                <ThemeProvider theme={topbarTheme}>\n                                    <Layout1Topbar />\n                                </ThemeProvider>\n                            )}\n                        <Box flexGrow={1} position=\"relative\">\n                            <MatxSuspense>\n                                {/* {renderRoutes(routes)} */}\n                                <Outlet />\n                            </MatxSuspense>\n                        </Box>\n                        {settings.footer.show && !settings.footer.fixed && (\n                            <Footer />\n                        )}\n                    </StyledScrollBar>\n                )}\n\n                {!settings.perfectScrollbar && (\n                    <ContentBox>\n                        {layout1Settings.topbar.show &&\n                            !layout1Settings.topbar.fixed && (\n                                // <Layout1Topbar />\n                                <ThemeProvider theme={topbarTheme}>\n                                    <Layout1Topbar />\n                                </ThemeProvider>\n                            )}\n                        <Box flexGrow={1} position=\"relative\">\n                            <MatxSuspense>\n                                {/* {renderRoutes(routes)} */}\n                                <Outlet />\n                            </MatxSuspense>\n                        </Box>\n                        {settings.footer.show && !settings.footer.fixed && (\n                            <Footer />\n                        )}\n                    </ContentBox>\n                )}\n\n                {settings.footer.show && settings.footer.fixed && <Footer />}\n            </LayoutContainer>\n            {settings.secondarySidebar.show && <SecondarySidebar />}\n        </Layout1Root>\n    )\n}\n\nexport default React.memo(Layout1)\n"],"sourceRoot":""}